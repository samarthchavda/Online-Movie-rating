{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router\";\n// import \"./loginPage.css\";\n// import axios from \"axios\";\n// import * as icons from \"react-icons/io5\";\n\n// function LoginPage() {\n//   const [isOption, setOption] = useState(\"login\");\n//   const navigate = useNavigate();\n//   const [error, setError] = useState();\n//   const [success, setSuccess] = useState();\n//   const [formData, setFormData] = useState({\n//     email: \"\",\n//     password: \"\",\n//     confirmPassword: \"\",\n//     Fname: \"\",\n//     lastName: \"\",\n//   });\n\n//   useEffect(() => {\n//     setFormData({\n//       email: \"\",\n//       password: \"\",\n//       confirmPassword: \"\",\n//       firstName: \"\",\n//       lastName: \"\",\n//     });\n//   }, [isOption]);\n\n//   const { email, password, confirmPassword, firstName, lastName } = formData;\n\n//   const toggleOption = (option) => {\n//     setOption(option);\n//   };\n\n//   const handleError = (err) => {\n//     setError(err);\n//     console.log(err);\n//   };\n\n//   const handleSuccess = (msg) => {\n//     setSuccess(msg);\n//   };\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const validateForm = () => {\n//     const emailRegex = /\\S+@\\S+\\.\\S+/;\n//     const confirmPasswordMatchPassword = password === confirmPassword;\n\n//     if (isOption === \"login\") {\n//       if (!email || !password) {\n//         handleError(\"email and password cannot be empty\");\n//         return false;\n//       } else return true;\n//     } else if (isOption === \"signin\") {\n//       if (!email || !password || !firstName || !lastName) {\n//         handleError(\"All fields are required\");\n//         return false;\n//       }\n//       if (!emailRegex.test(email)) {\n//         handleError(\"Invalid email format\");\n//         return false;\n//       }\n\n//       if (!confirmPasswordMatchPassword) {\n//         handleError(\"Password and confirm password must match\");\n//         return false;\n//       }\n//       if (!/(?=.*[a-z])/.test(confirmPassword)) {\n//         handleError(\"Password must contain at least one lowercase letter\");\n//         return false;\n//       }\n\n//       if (!/(?=.*[A-Z])/.test(confirmPassword)) {\n//         handleError(\"Password must contain at least one uppercase letter\");\n//         return false;\n//       }\n\n//       if (!/(?=.*[0-9])/.test(confirmPassword)) {\n//         handleError(\"Password must contain at least one number\");\n//         return false;\n//       }\n\n//       if (!/(?=.*[!@#$%^& *])/.test(confirmPassword)) {\n//         handleError(\"Password must contain at least one special character\");\n//         return false;\n//       }\n\n//       if (!/(?=.{8,12})/.test(confirmPassword)) {\n//         handleError(\"Password must be between 8 to 12 characters long\");\n//         return false;\n//       } else return true;\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (isOption === \"login\") {\n//       if (validateForm()) {\n//         try {\n//           const { data } = await axios.post(\n//             \"http://localhost:8989/login\",\n//             {\n//               ...formData,\n//             },\n//             { withCredentials: true }\n//           );\n//           console.log(data);\n//           const { success, message } = data;\n//           if (success) {\n//             handleSuccess(\"login successfully\");\n//             setError(\"\");\n//             setTimeout(() => {\n//               navigate(\"/\");\n//             }, 500);\n//           } else {\n//             handleError(message);\n//           }\n//         } catch (error) {\n//           console.log(error);\n//         }\n//         setFormData({\n//           ...formData,\n//           email: \"\",\n//           password: \"\",\n//         });\n//       }\n//     } else {\n//       if (validateForm()) {\n//         try {\n//           const { data } = await axios.post(\n//             \"http://localhost:8989/signup\",\n//             {\n//               ...formData,\n//             },\n//             {\n//               withCredentials: true,\n//             }\n//           );\n//           const { success, message } = data;\n//           if (success) {\n//             handleSuccess(\"login successfully\");\n//             setError(\"\");\n//             setTimeout(() => {\n//               navigate(\"/\");\n//             }, 500);\n//           } else {\n//             handleError(message);\n//           }\n//         } catch (error) {\n//           console.log(error);\n//         }\n//         setFormData({\n//           ...formData,\n//           email: \"\",\n//           password: \"\",\n//           username: \"\",\n//           firstName: \"\",\n//           lastName: \"\",\n//           confirmPassword: \"\",\n//         });\n//       }\n//     }\n//   };\n\n//   return (\n//     <>\n//       <div className=\"container-login\">\n//         {isOption === \"login\" && <div className=\"text-login\">Login</div>}\n//         {isOption === \"signin\" && <div className=\"text-login\">Sign Up</div>}\n\n//         <div className=\"form-login\">\n//           <form onSubmit={handleSubmit}>\n//             {isOption === \"signin\" && (\n//               <div className=\"name-box-login\">\n//                 <div className=\"fname-login\">\n//                   <label className=\"label-login\">First Name</label>\n//                   <input\n//                     type=\"text\"\n//                     placeholder=\"First Name\"\n//                     className=\"name login-input text-upper\"\n//                     name=\"firstName\"\n//                     value={formData.firstName}\n//                     onChange={handleChange}\n//                   />\n//                 </div>\n//                 <div className=\"fname-login\">\n//                   <label className=\"label-login\">Last Name</label>\n//                   <input\n//                     type=\"text\"\n//                     placeholder=\"Last Name\"\n//                     className=\"name login-input text-upper\"\n//                     name=\"lastName\"\n//                     value={formData.lastName}\n//                     onChange={handleChange}\n//                   />\n//                 </div>\n//               </div>\n//             )}\n\n//             <label className=\"label-login\">Email</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"example@example.com\"\n//               className=\"login-input username\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               autoFocus\n//             />\n//             <label className=\"label-login\">Password</label>\n\n//             <input\n//               type=\"password\"\n//               placeholder=\"Enter Password\"\n//               className=\"login-input\"\n//               name=\"password\"\n//               value={formData.password}\n//               onChange={handleChange}\n//             />\n//             {isOption === \"signin\" && (\n//               <>\n//                 <label className=\"label-login\">Confirm Password</label>\n\n//                 <input\n//                   type=\"password\"\n//                   placeholder=\"Enter Password\"\n//                   className=\"login-input\"\n//                   name=\"confirmPassword\"\n//                   value={formData.confirmPassword}\n//                   onChange={handleChange}\n//                 />\n//               </>\n//             )}\n//             <button className=\"btn-login\" id=\"continue\" onClick={handleSubmit}>\n//               Continue\n//             </button>\n//             {error && <p className=\"error\">{error}</p>}\n//             {success && <p className=\"success\">{success}</p>}\n//           </form>\n//         </div>\n\n//         <div className=\"newUser-login\">\n//           {isOption === \"login\" && (\n//             <>\n//               New user?\n//               <span\n//                 className=\"link-login\"\n//                 onClick={() => toggleOption(\"signin\")}\n//               >\n//                 Create an account\n//               </span>\n//             </>\n//           )}\n//           {isOption === \"signin\" && (\n//             <>\n//               Already have an account?\n//               <span\n//                 className=\"link-login\"\n//                 onClick={() => toggleOption(\"login\")}\n//               >\n//                 Sign in\n//               </span>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default LoginPage;","map":{"version":3,"names":[],"sources":["/Users/chavdasamarth/collage/online-movie-rating/Fronted/src/Pages/loginPage/login.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n// import \"./loginPage.css\";\r\n// import axios from \"axios\";\r\n// import * as icons from \"react-icons/io5\";\r\n\r\n// function LoginPage() {\r\n//   const [isOption, setOption] = useState(\"login\");\r\n//   const navigate = useNavigate();\r\n//   const [error, setError] = useState();\r\n//   const [success, setSuccess] = useState();\r\n//   const [formData, setFormData] = useState({\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     confirmPassword: \"\",\r\n//     Fname: \"\",\r\n//     lastName: \"\",\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     setFormData({\r\n//       email: \"\",\r\n//       password: \"\",\r\n//       confirmPassword: \"\",\r\n//       firstName: \"\",\r\n//       lastName: \"\",\r\n//     });\r\n//   }, [isOption]);\r\n\r\n//   const { email, password, confirmPassword, firstName, lastName } = formData;\r\n\r\n//   const toggleOption = (option) => {\r\n//     setOption(option);\r\n//   };\r\n\r\n//   const handleError = (err) => {\r\n//     setError(err);\r\n//     console.log(err);\r\n//   };\r\n\r\n//   const handleSuccess = (msg) => {\r\n//     setSuccess(msg);\r\n//   };\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const validateForm = () => {\r\n//     const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n//     const confirmPasswordMatchPassword = password === confirmPassword;\r\n\r\n//     if (isOption === \"login\") {\r\n//       if (!email || !password) {\r\n//         handleError(\"email and password cannot be empty\");\r\n//         return false;\r\n//       } else return true;\r\n//     } else if (isOption === \"signin\") {\r\n//       if (!email || !password || !firstName || !lastName) {\r\n//         handleError(\"All fields are required\");\r\n//         return false;\r\n//       }\r\n//       if (!emailRegex.test(email)) {\r\n//         handleError(\"Invalid email format\");\r\n//         return false;\r\n//       }\r\n\r\n//       if (!confirmPasswordMatchPassword) {\r\n//         handleError(\"Password and confirm password must match\");\r\n//         return false;\r\n//       }\r\n//       if (!/(?=.*[a-z])/.test(confirmPassword)) {\r\n//         handleError(\"Password must contain at least one lowercase letter\");\r\n//         return false;\r\n//       }\r\n\r\n//       if (!/(?=.*[A-Z])/.test(confirmPassword)) {\r\n//         handleError(\"Password must contain at least one uppercase letter\");\r\n//         return false;\r\n//       }\r\n\r\n//       if (!/(?=.*[0-9])/.test(confirmPassword)) {\r\n//         handleError(\"Password must contain at least one number\");\r\n//         return false;\r\n//       }\r\n\r\n//       if (!/(?=.*[!@#$%^& *])/.test(confirmPassword)) {\r\n//         handleError(\"Password must contain at least one special character\");\r\n//         return false;\r\n//       }\r\n\r\n//       if (!/(?=.{8,12})/.test(confirmPassword)) {\r\n//         handleError(\"Password must be between 8 to 12 characters long\");\r\n//         return false;\r\n//       } else return true;\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (isOption === \"login\") {\r\n//       if (validateForm()) {\r\n//         try {\r\n//           const { data } = await axios.post(\r\n//             \"http://localhost:8989/login\",\r\n//             {\r\n//               ...formData,\r\n//             },\r\n//             { withCredentials: true }\r\n//           );\r\n//           console.log(data);\r\n//           const { success, message } = data;\r\n//           if (success) {\r\n//             handleSuccess(\"login successfully\");\r\n//             setError(\"\");\r\n//             setTimeout(() => {\r\n//               navigate(\"/\");\r\n//             }, 500);\r\n//           } else {\r\n//             handleError(message);\r\n//           }\r\n//         } catch (error) {\r\n//           console.log(error);\r\n//         }\r\n//         setFormData({\r\n//           ...formData,\r\n//           email: \"\",\r\n//           password: \"\",\r\n//         });\r\n//       }\r\n//     } else {\r\n//       if (validateForm()) {\r\n//         try {\r\n//           const { data } = await axios.post(\r\n//             \"http://localhost:8989/signup\",\r\n//             {\r\n//               ...formData,\r\n//             },\r\n//             {\r\n//               withCredentials: true,\r\n//             }\r\n//           );\r\n//           const { success, message } = data;\r\n//           if (success) {\r\n//             handleSuccess(\"login successfully\");\r\n//             setError(\"\");\r\n//             setTimeout(() => {\r\n//               navigate(\"/\");\r\n//             }, 500);\r\n//           } else {\r\n//             handleError(message);\r\n//           }\r\n//         } catch (error) {\r\n//           console.log(error);\r\n//         }\r\n//         setFormData({\r\n//           ...formData,\r\n//           email: \"\",\r\n//           password: \"\",\r\n//           username: \"\",\r\n//           firstName: \"\",\r\n//           lastName: \"\",\r\n//           confirmPassword: \"\",\r\n//         });\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"container-login\">\r\n//         {isOption === \"login\" && <div className=\"text-login\">Login</div>}\r\n//         {isOption === \"signin\" && <div className=\"text-login\">Sign Up</div>}\r\n\r\n//         <div className=\"form-login\">\r\n//           <form onSubmit={handleSubmit}>\r\n//             {isOption === \"signin\" && (\r\n//               <div className=\"name-box-login\">\r\n//                 <div className=\"fname-login\">\r\n//                   <label className=\"label-login\">First Name</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"First Name\"\r\n//                     className=\"name login-input text-upper\"\r\n//                     name=\"firstName\"\r\n//                     value={formData.firstName}\r\n//                     onChange={handleChange}\r\n//                   />\r\n//                 </div>\r\n//                 <div className=\"fname-login\">\r\n//                   <label className=\"label-login\">Last Name</label>\r\n//                   <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Last Name\"\r\n//                     className=\"name login-input text-upper\"\r\n//                     name=\"lastName\"\r\n//                     value={formData.lastName}\r\n//                     onChange={handleChange}\r\n//                   />\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n\r\n//             <label className=\"label-login\">Email</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"example@example.com\"\r\n//               className=\"login-input username\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={handleChange}\r\n//               autoFocus\r\n//             />\r\n//             <label className=\"label-login\">Password</label>\r\n\r\n//             <input\r\n//               type=\"password\"\r\n//               placeholder=\"Enter Password\"\r\n//               className=\"login-input\"\r\n//               name=\"password\"\r\n//               value={formData.password}\r\n//               onChange={handleChange}\r\n//             />\r\n//             {isOption === \"signin\" && (\r\n//               <>\r\n//                 <label className=\"label-login\">Confirm Password</label>\r\n\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   placeholder=\"Enter Password\"\r\n//                   className=\"login-input\"\r\n//                   name=\"confirmPassword\"\r\n//                   value={formData.confirmPassword}\r\n//                   onChange={handleChange}\r\n//                 />\r\n//               </>\r\n//             )}\r\n//             <button className=\"btn-login\" id=\"continue\" onClick={handleSubmit}>\r\n//               Continue\r\n//             </button>\r\n//             {error && <p className=\"error\">{error}</p>}\r\n//             {success && <p className=\"success\">{success}</p>}\r\n//           </form>\r\n//         </div>\r\n\r\n//         <div className=\"newUser-login\">\r\n//           {isOption === \"login\" && (\r\n//             <>\r\n//               New user?\r\n//               <span\r\n//                 className=\"link-login\"\r\n//                 onClick={() => toggleOption(\"signin\")}\r\n//               >\r\n//                 Create an account\r\n//               </span>\r\n//             </>\r\n//           )}\r\n//           {isOption === \"signin\" && (\r\n//             <>\r\n//               Already have an account?\r\n//               <span\r\n//                 className=\"link-login\"\r\n//                 onClick={() => toggleOption(\"login\")}\r\n//               >\r\n//                 Sign in\r\n//               </span>\r\n//             </>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// export default LoginPage;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}