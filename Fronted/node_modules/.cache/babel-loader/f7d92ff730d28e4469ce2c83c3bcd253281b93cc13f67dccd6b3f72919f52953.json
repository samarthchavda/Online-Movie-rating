{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-1\\\\project-1\\\\src\\\\Pages\\\\Series\\\\Series.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport Genres from \"../../components/Genres/Genres\";\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\nimport useGenre from \"../../hooks/useGenre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_API_KEY || \"2ab0cc3b6a60d9ac8239bca7a836ddb6\";\nconst Series = () => {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [page, setPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [numOfPages, setNumOfPages] = useState();\n  const genreforURL = useGenre(selectedGenres);\n  const fetchSeries = async () => {\n    const {\n      data\n    } = await axios.get(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`);\n    setContent(data.results);\n    setNumOfPages(data.total_pages);\n    // console.log(data);\n  };\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSeries();\n    // eslint-disable-next-line\n  }, [genreforURL, page]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pageTitle\",\n      children: \"Discover Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      type: \"tv\",\n      selectedGenres: selectedGenres,\n      setSelectedGenres: setSelectedGenres,\n      genres: genres,\n      setGenres: setGenres,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"trending\",\n      children: content && content.map(c => /*#__PURE__*/_jsxDEV(SingleContent, {\n        id: c.id,\n        poster: c.poster_path,\n        title: c.title || c.name,\n        date: c.first_air_date || c.release_date,\n        media_type: \"tv\",\n        vote_average: c.vote_average\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), numOfPages > 1 && /*#__PURE__*/_jsxDEV(CustomPagination, {\n      setPage: setPage,\n      numOfPages: numOfPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Series, \"XK1YKfc94s2l+Ob0biLUcn7v/6s=\", false, function () {\n  return [useGenre];\n});\n_c = Series;\nexport default Series;\nvar _c;\n$RefreshReg$(_c, \"Series\");","map":{"version":3,"names":["axios","useEffect","useState","Genres","CustomPagination","SingleContent","useGenre","jsxDEV","_jsxDEV","API_KEY","process","env","REACT_APP_API_KEY","Series","_s","genres","setGenres","selectedGenres","setSelectedGenres","page","setPage","content","setContent","numOfPages","setNumOfPages","genreforURL","fetchSeries","data","get","results","total_pages","window","scroll","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","map","c","id","poster","poster_path","title","name","date","first_air_date","release_date","media_type","vote_average","_c","$RefreshReg$"],"sources":["D:/project-1/project-1/src/Pages/Series/Series.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Genres from \"../../components/Genres/Genres\";\r\nimport CustomPagination from \"../../components/Pagination/CustomPagination\";\r\nimport SingleContent from \"../../components/SingleContent/SingleContent\";\r\nimport useGenre from \"../../hooks/useGenre\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY || \"2ab0cc3b6a60d9ac8239bca7a836ddb6\";\r\n\r\nconst Series = () => {\r\n  const [genres, setGenres] = useState([]);\r\n  const [selectedGenres, setSelectedGenres] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [content, setContent] = useState([]);\r\n  const [numOfPages, setNumOfPages] = useState();\r\n  const genreforURL = useGenre(selectedGenres);\r\n\r\n  const fetchSeries = async () => {\r\n    const { data } = await axios.get(\r\n      `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&with_genres=${genreforURL}`\r\n    );\r\n    setContent(data.results);\r\n    setNumOfPages(data.total_pages);\r\n    // console.log(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    fetchSeries();\r\n    // eslint-disable-next-line\r\n  }, [genreforURL, page]);\r\n\r\n  return (\r\n    <div>\r\n      <span className=\"pageTitle\">Discover Series</span>\r\n      <Genres\r\n        type=\"tv\"\r\n        selectedGenres={selectedGenres}\r\n        setSelectedGenres={setSelectedGenres}\r\n        genres={genres}\r\n        setGenres={setGenres}\r\n        setPage={setPage}\r\n      />\r\n      <div className=\"trending\">\r\n        {content &&\r\n          content.map((c) => (\r\n            <SingleContent\r\n              key={c.id}\r\n              id={c.id}\r\n              poster={c.poster_path}\r\n              title={c.title || c.name}\r\n              date={c.first_air_date || c.release_date}\r\n              media_type=\"tv\"\r\n              vote_average={c.vote_average}\r\n            />\r\n          ))}\r\n      </div>\r\n      {numOfPages > 1 && (\r\n        <CustomPagination setPage={setPage} numOfPages={numOfPages} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Series;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}